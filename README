This is the README file for JYMAG (Java Your Music and Graphics), a program
 for retrieving multimedia from a Sagem mobile phone (tested on Linux with
 "Sagem MY X5-2").

Author: Bogdan Drozdowski, bogdandr @ op . pl
License: GPLv3+

========================= Running

You NEED RxTx Java Transmission package from www.rxtx.org to run this program.

Using NetBeans: open the JYMAG folder as a NetBeans Project
 and hit "Run".

By hand (after unpacking):
	java -jar JYMAG/dist/JYMAG.jar

========================= Compiling (if necessary)

Requirements for compiling:

- JDK, the Java Development Kit >= (1.)6.0

- RxTx Java Transmission package from www.rxtx.org

Compiling using NetBeans: open the JYMAG folder as a NetBeans Project
 and hit "Build Main Project".

Compiling by hand: try
	cd JYMAG/src/BogDroSoft/jymag/
	java *.java

========================= Usage (GUI)

Phone setup: conecct it to the computer using a cable or IrDA or
 whatever works. Switch the transmission on in the phone, if necessary.
 If using a cable, select "Automatic speed" in the configuration.

No need to connect to the phone. Start by selecting the tab you're
 interested in (photos, ringtones, ...). Click on "Get list" to connect
 to the phone and get the list of elements. Select the elements you wish
 to download and click "Download selected". choose the destination directory.
 The downloaded files will show up in selected location.
To upload an element, simply click the "Upload" button. Getting the
 list isn't necessary.

========================= Using (command line)

The following command-line (case-insensitive) options are supported:

	    --download-dir <dir>	- sets the default directory
	    --flow <none,soft,hard>	- sets the flow control mode
	    --port <filename>		- sets the default port
	    --parity <none, even, odd, space, mark>	- sets the parity mode
	    --databits <5,6,7,8>	- sets the number of data bits
	    --speed <1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200,
		230400, 460800, 500000, 576000, 921600, 1000000, 1152000,
		1500000, 2000000, 2500000, 3000000, 3500000, 4000000>
			- sets the port speed
	    --stopbits <1,1.5,2>	- sets the number of stop bits
	    --upload <filename>		- uploads the given file to the phone
					  and exits the program
	    --scan			- scans available ports for "OK" answers
					  and exits the program
	    --download-all-photos	- downloads all photos from the phone
					  and exits the program
	    --download-all-ringtones	- downloads all ringtones from the phone
					  and exits the program
	    --download-all-todo		- downloads all to-do tasks from the
					  phone and exits the program
	    --download-all-events	- downloads all events from the phone
					  and exits the program
	    --download-all-vcards	- downloads all addressbook entries
					  from the phone and exits the program
	    --download-all		- combines all "download" options
					  and exits the program
	    --delete-after-download     - delete the downloaded elements if
					  downloaded succesfully


========================= Currently supported operations:

1) Getting lists of: pictures, ringtones, addressbook entries,
   to-do tasks and events
2) Downloading:
   a) pictures: JPG (both Sagem and non-Sagem), GIF, BMP, PNG
   b) ringtones: MIDI, AMR, WAV
   c) addressbook entries (vCards)
   d) to-do tasks
   e) events (reminders, ...)
3) Uploading:
   a) pictures: JPG, GIF, BMP, PNG
   b) ringtones: MIDI, WAV (IMA ADPCM, 8000Hz 16bit Mono?)
4) Deleting pictures, ringtones, addressbook entries,
   to-do tasks and events

========================= Converting ringtones

Some ringtones received from the phone may be in AMR format. You can
 convert those to other formats using other software, like the free
 "Mobile Media Converter". If it doesn't work, use the FFMPEG program
 attached to the "Mobile Media Converter" like this:

 ffmpeg -i Ring.amr -ar 44100 Ring.wav

To convert a ringtone to a WAV format accepted by the phone, use the
 following command:

 ffmpeg -i <ringtone file> -ar 8000 -t 10 -ac 1
	-acodec adpcm_ima_wav <output file>.wav

(the number after "-t" is the ringtone duration in seconds). I've only been
able to upload ringtones created with the above command. It may be possible
to upload longer ringtones, in greater sampling rates, stereo, ..., but
I haven't tried all that (my 30-second ringtones are rejected).

========================= If not working

1. The phone's port doesn't show up on the list.
   Not JYMAG's fault. Make sure:
   - you have installed a correct driver for the cable/IrDA/other devices
   - the phone's port is not already in use
   - you have the newest RxTx

2. Getting the list(s) fails.
   Click "Scan ports". If an answer is received, the correct port should be
   selected in the combo box. If not, an error will show up. Try closing
   the program and starting it at least 3 more times. If no success, check
   your drivers and connection.

3. The program doesn't start and gives
 "class not found/java.lang.NoClassDefFoundError" messages.
   Run java with its full path, like "/usr/bin/java -jar JYMAG.jar".
   You can also try adding the path to RxTx to your CLASSPATH environment
   variable (create one if it doesn't exist). Try adding both the directory
   containing the RXTXcomm.jar file and the path to the file itself.

4. Downloaded elements are corrupted.
   Mine sometimes are corrupted too. I can't help it. Some elements get
   downloaded correctly at the first attempt, some require a few attempts, and
   some require a lot of attempts. Since it works one time and doesn't work
   the other time, it's not JYMAG's fault. Since it works, the program is
   written correctly. It's the connection that is unreliable. The original
   program was even worse - the connection broke in the middle of transmission
   and you had to click "Connect" over and over again and some pictues were
   corrupted too. Have patience. If you know how to make this better, contact
   me (e-mail at the top of this file).

========================= Reporting bugs

1. Check if you have the newest versions of JYMAG.
2. Include your Java and RxTx version numbers. See if the program works with a
   newer/older version of Java/RxTx. If it works with an older version, but
   not with a new one, you problem is solved, but still tell me the
   problematic version numbers.
3. Include precise steps for reproducing the error, if possible. This will
   make finding the problem easier.
4. If the program crashed, include "jymag.log" in your report. It should be
   in the current JYMAG working directory.
5. If the program exited normally, but the "jymag.log" still exists after
   closing the program and is not empty, include it in your report.
6. Take all the information from the above steps any and additional
   information you can give and send to my e-mail address (you can find it
   at the top of this file).

