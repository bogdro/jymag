/*
 * EventsPanel.java, part of the JYMAG package.
 *
 * Copyright (C) 2013-2024 Bogdan Drozdowski, bogdro (at) users . sourceforge . net
 * License: GNU General Public License, v3+
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package bogdrosoft.jymag.gui.panels;

import bogdrosoft.jymag.PhoneElement;
import bogdrosoft.jymag.Utils;
import bogdrosoft.jymag.gui.JYMAGTransferHandler;
import bogdrosoft.jymag.gui.MainWindow;
import bogdrosoft.jymag.gui.UiUtils;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;

/**
 * This class is the addressbook panel in the JYMAG program.
 * @author Bogdan Drozdowski
 */
public class EventsPanel extends javax.swing.JPanel implements JYMAGTab
{
	private static final long serialVersionUID = 84L;

	private transient MainWindow mw;

	private Vector<PhoneElement> currentEventElements;
	private JFileChooser downloadFC;
	private JFileChooser uploadEventFC;
	private String destDirName;

	// i18n stuff:
	private static final ResourceBundle MSGS
		= ResourceBundle.getBundle("bogdrosoft/jymag/i18n/MainWindow");
	private static final String EVENT_TYPES_STRING
		= MSGS.getString("Supported_event_and_task_files");

	/** Creates new form EventsPanel. */
	public EventsPanel()
	{
		initComponents();

		eventTable.setFillsViewportHeight (true);
		eventTable.setDragEnabled (true);
		/* Make clicking on the table header select all the table's rows */
		eventTable.getTableHeader ().addMouseListener (
			new UiUtils.TableMouseListener (eventTable));
	}

	/**
	 * This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings({"unchecked", "rawtypes"})
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents()
        {

                deleteEventBut = new javax.swing.JButton();
                uploadEventBut = new javax.swing.JButton();
                downloadEventBut = new javax.swing.JButton();
                getEventListBut = new javax.swing.JButton();
                jScrollPane5 = new javax.swing.JScrollPane();
                eventTable = new javax.swing.JTable();

                setBackground(new java.awt.Color(219, 218, 156));

                deleteEventBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bogdrosoft/jymag/rsrc/delete.png"))); // NOI18N
                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("bogdrosoft/jymag/i18n/MainWindow"); // NOI18N
                deleteEventBut.setText(bundle.getString("Delete_selected")); // NOI18N
                deleteEventBut.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                deleteEventButdeleteButActionPerformed(evt);
                        }
                });

                uploadEventBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bogdrosoft/jymag/rsrc/upload.png"))); // NOI18N
                uploadEventBut.setText(bundle.getString("Upload")); // NOI18N
                uploadEventBut.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                uploadEventButActionPerformed(evt);
                        }
                });

                downloadEventBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bogdrosoft/jymag/rsrc/download.png"))); // NOI18N
                downloadEventBut.setText(bundle.getString("Download_selected")); // NOI18N
                downloadEventBut.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                downloadEventButdownloadButActionPerformed(evt);
                        }
                });

                getEventListBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bogdrosoft/jymag/rsrc/get-list.png"))); // NOI18N
                getEventListBut.setText(bundle.getString("Get_list")); // NOI18N
                getEventListBut.addActionListener(new java.awt.event.ActionListener()
                {
                        public void actionPerformed(java.awt.event.ActionEvent evt)
                        {
                                getEventListButActionPerformed(evt);
                        }
                });

                jScrollPane5.setPreferredSize(new java.awt.Dimension(0, 0));

                eventTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][]
                        {

                        },
                        new String []
                        {
                                java.util.ResourceBundle.getBundle("bogdrosoft/jymag/i18n/MainWindow").getString("Name")
                        }
                )
                {
                        private static final long serialVersionUID = 70L;
                        Class[] types = new Class []
                        {
                                java.lang.String.class
                        };
                        boolean[] canEdit = new boolean []
                        {
                                false
                        };

                        public Class getColumnClass(int columnIndex)
                        {
                                return types [columnIndex];
                        }

                        public boolean isCellEditable(int rowIndex, int columnIndex)
                        {
                                return canEdit [columnIndex];
                        }
                });
                jScrollPane5.setViewportView(eventTable);

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 1012, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(getEventListBut)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(downloadEventBut)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(uploadEventBut)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(deleteEventBut)))
                                        .addContainerGap()))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 265, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(getEventListBut)
                                                .addComponent(downloadEventBut)
                                                .addComponent(uploadEventBut)
                                                .addComponent(deleteEventBut))
                                        .addGap(25, 25, 25)))
                );

                layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteEventBut, downloadEventBut, getEventListBut, uploadEventBut});

        }// </editor-fold>//GEN-END:initComponents

	private void getEventListButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_getEventListButActionPerformed
	{//GEN-HEADEREND:event_getEventListButActionPerformed

		if ( currentEventElements == null )
		{
			currentEventElements = new Vector<PhoneElement> (1);
		}

		PanelUtils.putListInTable (mw, "VEVENT",	// NOI18N
			(DefaultTableModel) eventTable.getModel (),
			currentEventElements);
	}//GEN-LAST:event_getEventListButActionPerformed

	private void downloadEventButdownloadButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_downloadEventButdownloadButActionPerformed
	{//GEN-HEADEREND:event_downloadEventButdownloadButActionPerformed

		if ( downloadFC == null )
		{
			downloadFC = new JFileChooser ();
		}

		PanelUtils.download(mw, eventTable.getSelectedRows (),
			currentEventElements, downloadFC, destDirName);
	}//GEN-LAST:event_downloadEventButdownloadButActionPerformed

	private void uploadEventButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_uploadEventButActionPerformed
	{//GEN-HEADEREND:event_uploadEventButActionPerformed

		if ( uploadEventFC == null )
		{
			uploadEventFC = UiUtils.createOpenFileChooser (
				EVENT_TYPES_STRING, Utils.getEventfileIDs ());
		}

		PanelUtils.upload(mw, uploadEventFC);
	}//GEN-LAST:event_uploadEventButActionPerformed

	private void deleteEventButdeleteButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteEventButdeleteButActionPerformed
	{//GEN-HEADEREND:event_deleteEventButdeleteButActionPerformed
		
		PanelUtils.delete(mw, eventTable.getSelectedRows (),
			currentEventElements);
	}//GEN-LAST:event_deleteEventButdeleteButActionPerformed

	@Override
	public void setDestDir (String destDir)
	{
		destDirName = destDir;
	}

	@Override
	public void setMainWindow (MainWindow mainWindow)
	{
		mw = mainWindow;
		eventTable.setTransferHandler (new JYMAGTransferHandler (mw));
	}

	@Override
	public void setFontSizeSpin (JSpinner fontSizeSpinner)
	{
		// not needed
	}


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton deleteEventBut;
        private javax.swing.JButton downloadEventBut;
        private javax.swing.JTable eventTable;
        private javax.swing.JButton getEventListBut;
        private javax.swing.JScrollPane jScrollPane5;
        private javax.swing.JButton uploadEventBut;
        // End of variables declaration//GEN-END:variables

}
