/*
 * SMSWindow.java, part of the JYMAG package.
 *
 * Copyright (C) 2011-2013 Bogdan Drozdowski, bogdandr (at) op.pl
 * License: GNU General Public License, v3+
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foudation:
 *		Free Software Foundation
 *		51 Franklin Street, Fifth Floor
 *		Boston, MA 02110-1301
 *		USA
 *
 */

package BogDroSoft.jymag.gui;

import BogDroSoft.jymag.comm.DataTransporter;
import BogDroSoft.jymag.PhoneMessage;
import BogDroSoft.jymag.Utils;
import java.awt.Dimension;
import java.util.ResourceBundle;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;


/**
 * This class is used to send and display SMS messages.
 * @author Bogdan Drozdowski
 */
public class SMSWindow extends javax.swing.JDialog
{
	private static final long serialVersionUID = 80L;
	private final DataTransporter dtr;
	private final Object sync;

	// ------------ i18n stuff
	private static final ResourceBundle swBundle = ResourceBundle.getBundle("BogDroSoft/jymag/i18n/SMSWindow");
	private static final String errString = ResourceBundle.getBundle("BogDroSoft/jymag/i18n/MainWindow").getString("Error");
	private static final String okString = swBundle.getString("message_sent");
	private static final String sendError = swBundle.getString("send_error");

	private static final String space = " ";	// NOI18N

	/**
	 * Creates new form SMSWindow.
	 * @param dt The DataTransporter instance to use for communications.
	 * Must already be open.
	 * @param parent The parent frame for this window.
	 * @param synchro A synchronization variable.
	 * @param fontSize The font size for this window.
	 */
	public SMSWindow (DataTransporter dt, java.awt.Frame parent,
		Object synchro, float fontSize, PhoneMessage msg)
	{
		// make modal
		super (parent, true);

		dtr = dt;
		sync = synchro;
		if ( msg == null && (dt == null || synchro == null) )
		{
			dispose ();
			return;
		}

		initComponents ();

		// If no PhoneMessage given to display, edit mode assumed.
		// Otherwise, disable editing and sending
		if ( msg != null )
		{
			sendBut.setEnabled (false);
			phoneNumField.setEditable (false);
			msgArea.setEditable (false);
			phoneNumField.setText (msg.getRecipientNum ());
			msgArea.setText (msg.getMessage ());
			//dtr = null;
		}

		// change the size so that the scrollbars fit:
		Dimension size = getSize ();
		if ( size != null )
		{
			size.height += 50;
			size.width += 50;
			setSize (size);
		}
		fontSizeSpin.setValue (fontSize);	// refresh the font in the window
		fontSizeLab.setHorizontalAlignment (JLabel.RIGHT);

		/* add the Esc key listener to the frame and all components. */
		new Utils.EscKeyListener (this);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                closeBut = new javax.swing.JButton();
                sendBut = new javax.swing.JButton();
                fontSizeLab = new javax.swing.JLabel();
                fontSizeSpin = new javax.swing.JSpinner();
                phoneLab = new javax.swing.JLabel();
                phoneNumField = new javax.swing.JTextField();
                msgLab = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                msgArea = new javax.swing.JTextArea();

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
                java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("BogDroSoft/jymag/i18n/SMSWindow"); // NOI18N
                setTitle(bundle.getString("smswindow_title")); // NOI18N

                closeBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BogDroSoft/jymag/rsrc/exit.png"))); // NOI18N
                closeBut.setText(bundle.getString("Exit")); // NOI18N
                closeBut.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                closeButActionPerformed(evt);
                        }
                });

                sendBut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BogDroSoft/jymag/rsrc/upload.png"))); // NOI18N
                sendBut.setText(bundle.getString("Send")); // NOI18N
                sendBut.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                sendButActionPerformed(evt);
                        }
                });

                fontSizeLab.setText(bundle.getString("font_size")); // NOI18N

                fontSizeSpin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(12), Integer.valueOf(1), null, Integer.valueOf(1)));
                fontSizeSpin.addChangeListener(new javax.swing.event.ChangeListener() {
                        public void stateChanged(javax.swing.event.ChangeEvent evt) {
                                fontSizeSpinStateChanged(evt);
                        }
                });

                phoneLab.setText(bundle.getString("phone_num")); // NOI18N

                msgLab.setText(bundle.getString("message")); // NOI18N

                msgArea.setColumns(20);
                msgArea.setRows(5);
                jScrollPane1.setViewportView(msgArea);
                msgArea.getAccessibleContext().setAccessibleName(bundle.getString("access_message_area")); // NOI18N

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(sendBut)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(closeBut)
                                                .addContainerGap())
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(fontSizeLab, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(fontSizeSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(169, 169, 169))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(phoneLab)
                                                        .addComponent(msgLab))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                                        .addComponent(phoneNumField, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE))
                                                .addContainerGap())))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(fontSizeLab)
                                        .addComponent(fontSizeSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(phoneLab)
                                        .addComponent(phoneNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(msgLab)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(closeBut)
                                        .addComponent(sendBut))
                                .addContainerGap())
                );

                closeBut.getAccessibleContext().setAccessibleName(bundle.getString("access_exit")); // NOI18N
                sendBut.getAccessibleContext().setAccessibleName(bundle.getString("access_send")); // NOI18N
                fontSizeLab.getAccessibleContext().setAccessibleName(bundle.getString("font_size")); // NOI18N
                fontSizeSpin.getAccessibleContext().setAccessibleName(bundle.getString("font_size_spin")); // NOI18N
                fontSizeSpin.getAccessibleContext().setAccessibleDescription(bundle.getString("access_font_size")); // NOI18N
                phoneNumField.getAccessibleContext().setAccessibleName(bundle.getString("access_phone")); // NOI18N

                pack();
        }// </editor-fold>//GEN-END:initComponents

	private void closeButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeButActionPerformed
	{//GEN-HEADEREND:event_closeButActionPerformed

		dispose ();
	}//GEN-LAST:event_closeButActionPerformed

	private void sendButActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_sendButActionPerformed
	{//GEN-HEADEREND:event_sendButActionPerformed

		if ( dtr == null || ! sendBut.isEnabled () ) return;
		final String phoneNumber = phoneNumField.getText ();
		final String messageBody = msgArea.getText ();
		if (phoneNumber == null || messageBody == null)
		{
			return;
		}
		if (phoneNumber.isEmpty () || messageBody.isEmpty ())
		{
			return;
		}
		phoneNumField.setEditable (false);
		msgArea.setEditable (false);

		SwingWorker<Integer, Void> sw =
			new SwingWorker<Integer, Void> ()
			{
				@Override
				protected Integer doInBackground ()
				{
					try
					{
						int sent = -1;
						synchronized (sync)
						{
							PhoneMessage msg = new PhoneMessage ();
							msg.setMessage (messageBody);
							msg.setRecipientNum (phoneNumber);
							sent = dtr.sendMessage (msg);
						}
						return sent;
					}
					catch (Exception ex)
					{
						Utils.handleException (ex, "SMSWindow: send");	// NOI18N
						return -1;
					}
				}

				@Override
				protected void done ()
				{
					try
					{
						Integer rcvd = get ();
						if (rcvd != null)
						{
							if (rcvd.intValue () == 0)
							{
								try
								{
									JOptionPane.showMessageDialog (null, okString,
										okString, JOptionPane.INFORMATION_MESSAGE);
								} catch (Exception ex2) {}
							}
							else
							{
								try
								{
									JOptionPane.showMessageDialog (null,
										sendError + space + rcvd.toString (),
										errString, JOptionPane.ERROR_MESSAGE);
								}
								catch (Exception ex2)
								{
									Utils.handleException (ex2, "SMSWindow.send.SW.showMessageDialog"	// NOI18N
										+ space + errString + space + sendError + space + rcvd.toString ());
								}
							}
						}
						else
						{
							try
							{
								JOptionPane.showMessageDialog (null,
									sendError,// + space + rcvd.toString (),
									errString, JOptionPane.ERROR_MESSAGE);
							}
							catch (Exception ex2)
							{
								Utils.handleException (ex2, "SMSWindow.send.SW.showMessageDialog"	// NOI18N
									+ space + errString + space + sendError /*+ space + rcvd.toString ()*/);
							}
						}
					}
					catch (Exception ex)
					{
						Utils.handleException (ex, "SMSWindow.send.SW.done");	// NOI18N
					}
					phoneNumField.setEditable (true);
					msgArea.setEditable (true);
				}
			};
		sw.execute ();
	}//GEN-LAST:event_sendButActionPerformed

	private void fontSizeSpinStateChanged (javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_fontSizeSpinStateChanged
	{//GEN-HEADEREND:event_fontSizeSpinStateChanged

		Object val = fontSizeSpin.getValue ();
		if (val != null && val instanceof Number)
		{
			Utils.setFontSize (this, ((Number) val).floatValue ());
		}
	}//GEN-LAST:event_fontSizeSpinStateChanged



        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton closeBut;
        private javax.swing.JLabel fontSizeLab;
        private javax.swing.JSpinner fontSizeSpin;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JTextArea msgArea;
        private javax.swing.JLabel msgLab;
        private javax.swing.JLabel phoneLab;
        private javax.swing.JTextField phoneNumField;
        private javax.swing.JButton sendBut;
        // End of variables declaration//GEN-END:variables
}
